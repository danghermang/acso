#include<stdio.h>
#include<stdlib.h>

void matrice_unitate(int* , int )
{
	_asm
	{
		mov edi,[ebp+8] //adresa la primul element din matrice
		mov ebx,0//i=0
for_i:
		cmp ebx,[ebp+12]
		jae exit_1
		mov ecx,0
for_j:
		cmp ecx,[ebp+12]
		jae exit_2

		mov eax,[ebp+12]
		mul ebx               
		add eax,ecx

		cmp ebx,ecx //compar i cu j
		jne not_eq //daca i!=j
		mov dword ptr [edi+eax*4],1 //i==j vom pune 1
		jmp inside
not_eq:
		mov dword ptr [edi+eax*4],0 //altfel,0
inside:
		inc ecx
		jmp for_j
exit_2:
		inc ebx
		jmp for_i
exit_1:
	}
}
void main()
{
	int n=5;
	int mat[5][5];
	int *p=mat[0];
	_asm
	{
		push n
		push p
		call matrice_unitate
		add esp,8
	}

	for(int i=0; i<n;i++)
	{
		for(int j=0;j<n;j++)
			printf("%d ",mat[i][j]);
		printf("\n");
	}
	system("pause");
}




